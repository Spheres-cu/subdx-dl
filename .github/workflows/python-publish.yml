name: Publish Python 🐍 distribution 📦 to PyPI

on: push

jobs:
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/subdx-dl  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  build-win-x64:
    name: Build Windows x64 Executable
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
      - name: Download wheel distribution
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Install wheel distribution
        run: |
          $package = (Get-ChildItem -Filter *.whl .\dist\).FullName
          pip install $package
      - name: Generate version info
        run: python .resources/create_version_info.py
      - name: Build with PyInstaller (x64)
        run: |
          python -m pip install pyinstaller
          pyinstaller --noconfirm --clean --upx-dir .resources subdx-dl.spec
      - name: Upload Windows x64 Executable
        uses: actions/upload-artifact@v4
        with:
          name: win-x64-executable
          path: dist/subdx-dl.exe

  build-win-x86:
    name: Build Windows x86 Executable
    runs-on: windows-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python (32-bit)
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          architecture: "x86"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
      - name: Download wheel distribution
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Install wheel distribution
        run: |
          $package = (Get-ChildItem -Filter *.whl .\dist\).FullName
          pip install $package
      - name: Generate version info
        run: python .resources/create_version_info.py
      - name: Build with PyInstaller (x86)
        run: |
          python -m pip install pyinstaller
          pyinstaller --noconfirm --clean subdx-dl.spec
      - name: Rename executable
        run: mv dist/subdx-dl.exe dist/subdx-dl_x86.exe
      - name: Upload Windows x86 Executable
        uses: actions/upload-artifact@v4
        with:
          name: win-x86-executable
          path: dist/subdx-dl_x86.exe

  build-linux:
    name: Build Linux Executable
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
      - name: Download wheel distribution
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Install wheel distribution
        run: |
          pip install dist/*.whl
      - name: Build with PyInstaller (Linux)
        run: |
          pip install pyinstaller
          pyinstaller --noconfirm --clean subdx-dl.spec
      - name: Upload Linux Executable
        uses: actions/upload-artifact@v4
        with:
          name: linux-executable
          path: dist/subdx-dl

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
      - publish-to-pypi
      - build-win-x64
      - build-win-x86
      - build-linux
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl

    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'
    - name: Download Windows x64 Executable
      uses: actions/download-artifact@v4
      with:
        name: win-x64-executable
        path: dist/
    - name: Download Windows x86 Executable
      uses: actions/download-artifact@v4
      with:
        name: win-x86-executable
        path: dist/
    - name: Download Linux Executable
      uses: actions/download-artifact@v4
      with:
        name: linux-executable
        path: dist/
    - name: Generate SHA-256 SUMS
      shell: bash
      run: |
        cd dist
        for f in subdx-dl.exe subdx-dl_x86.exe subdx-dl; do
          if [ -f "$f" ]; then
            sha256sum "$f" >> SHA_256_SUMS.txt
          fi
        done
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        gh release upload '${{ github.ref_name }}' dist/** SHA_256_SUMS.txt --repo '${{ github.repository }}'
